<?php

namespace Proxies\__CG__\App\AutoPartsWarehouse\DomainAutoPartsWarehouse\DomainModelAutoPartsWarehouse\EntityAutoPartsWarehouse;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AutoPartsWarehouse extends \App\AutoPartsWarehouse\DomainAutoPartsWarehouse\DomainModelAutoPartsWarehouse\EntityAutoPartsWarehouse\AutoPartsWarehouse implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'Sales' => [parent::class, 'Sales', null],
        "\0".parent::class."\0".'date_receipt_auto_parts_warehouse' => [parent::class, 'date_receipt_auto_parts_warehouse', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'id_counterparty' => [parent::class, 'id_counterparty', null],
        "\0".parent::class."\0".'id_details' => [parent::class, 'id_details', null],
        "\0".parent::class."\0".'id_payment_method' => [parent::class, 'id_payment_method', null],
        "\0".parent::class."\0".'price' => [parent::class, 'price', null],
        "\0".parent::class."\0".'quantity' => [parent::class, 'quantity', null],
        "\0".parent::class."\0".'quantity_sold' => [parent::class, 'quantity_sold', null],
        'Sales' => [parent::class, 'Sales', null],
        'date_receipt_auto_parts_warehouse' => [parent::class, 'date_receipt_auto_parts_warehouse', null],
        'id' => [parent::class, 'id', null],
        'id_counterparty' => [parent::class, 'id_counterparty', null],
        'id_details' => [parent::class, 'id_details', null],
        'id_payment_method' => [parent::class, 'id_payment_method', null],
        'price' => [parent::class, 'price', null],
        'quantity' => [parent::class, 'quantity', null],
        'quantity_sold' => [parent::class, 'quantity_sold', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
