<?php

namespace ContainerM9s1qO5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DataCollector/Proxy/ResolvedTypeFactoryDataCollectorProxy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\EditAutoPartsWarehouseType' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\EditAutoPartsWarehouseType', 'getEditAutoPartsWarehouseTypeService', true],
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsEmailType' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsEmailType', 'getSaveAutoPartsEmailTypeService', true],
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsFaleType' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsFaleType', 'getSaveAutoPartsFaleTypeService', true],
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsManuallyType' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsManuallyType', 'getSaveAutoPartsManuallyTypeService', true],
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SearchAutoPartsWarehouseType' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SearchAutoPartsWarehouseType', 'getSearchAutoPartsWarehouseTypeService', true],
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\EditCounterpartyType' => ['privates', 'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\EditCounterpartyType', 'getEditCounterpartyTypeService', true],
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SaveCounterpartyType' => ['privates', 'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SaveCounterpartyType', 'getSaveCounterpartyTypeService', true],
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SearchCounterpartyType' => ['privates', 'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SearchCounterpartyType', 'getSearchCounterpartyTypeService', true],
            'App\\Form\\Type\\EntityHiddenType' => ['privates', 'App\\Form\\Type\\EntityHiddenType', 'getEntityHiddenTypeService', true],
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\EditPartNumbersType' => ['privates', 'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\EditPartNumbersType', 'getEditPartNumbersTypeService', true],
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SavePartNumbersType' => ['privates', 'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SavePartNumbersType', 'getSavePartNumbersTypeService', true],
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SearchPartNumbersType' => ['privates', 'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SearchPartNumbersType', 'getSearchPartNumbersTypeService', true],
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\AutoPartsSoldType' => ['privates', 'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\AutoPartsSoldType', 'getAutoPartsSoldTypeService', true],
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\CompletionSaleType' => ['privates', 'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\CompletionSaleType', 'getCompletionSaleTypeService', true],
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditCartPartsType' => ['privates', 'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditCartPartsType', 'getEditCartPartsTypeService', true],
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditSalesAutoPartsType' => ['privates', 'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditSalesAutoPartsType', 'getEditSalesAutoPartsTypeService', true],
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\SearchSalesType' => ['privates', 'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\SearchSalesType', 'getSearchSalesTypeService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['privates', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
        ], [
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\EditAutoPartsWarehouseType' => '?',
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsEmailType' => '?',
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsFaleType' => '?',
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SaveAutoPartsManuallyType' => '?',
            'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\FormAutoPartsWarehouse\\SearchAutoPartsWarehouseType' => '?',
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\EditCounterpartyType' => '?',
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SaveCounterpartyType' => '?',
            'App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\FormCounterparty\\SearchCounterpartyType' => '?',
            'App\\Form\\Type\\EntityHiddenType' => '?',
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\EditPartNumbersType' => '?',
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SavePartNumbersType' => '?',
            'App\\PartNumbers\\InfrastructurePartNumbers\\ApiPartNumbers\\FormPartNumbers\\SearchPartNumbersType' => '?',
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\AutoPartsSoldType' => '?',
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\CompletionSaleType' => '?',
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditCartPartsType' => '?',
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\EditSalesAutoPartsType' => '?',
            'App\\Sales\\InfrastructureSales\\ApiSales\\FormSales\\SearchSalesType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ??= new \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension(NULL));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 4 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
            yield 5 => ($container->privates['form.type_extension.form.password_hasher'] ?? $container->load('getForm_TypeExtension_Form_PasswordHasherService'));
        }, 6), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.password.password_hasher'] ?? $container->load('getForm_TypeExtension_Password_PasswordHasherService'));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? self::getDataCollector_FormService($container))));
    }
}
