<?php

namespace ContainerM9s1qO5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSearchCounterpartyQueryHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Counterparty\ApplicationCounterparty\QueryCounterparty\SearchCounterpartyQuery\SearchCounterpartyQueryHandler' shared autowired service.
     *
     * @return \App\Counterparty\ApplicationCounterparty\QueryCounterparty\SearchCounterpartyQuery\SearchCounterpartyQueryHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Counterparty/ApplicationCounterparty/QueryCounterparty/SearchCounterpartyQuery/SearchCounterpartyQueryHandler.php';
        include_once \dirname(__DIR__, 4).'/src/Counterparty/ApplicationCounterparty/Errors/InputErrors.php';

        return $container->privates['App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\SearchCounterpartyQuery\\SearchCounterpartyQueryHandler'] = new \App\Counterparty\ApplicationCounterparty\QueryCounterparty\SearchCounterpartyQuery\SearchCounterpartyQueryHandler(($container->privates['App\\Counterparty\\ApplicationCounterparty\\Errors\\InputErrors'] ??= new \App\Counterparty\ApplicationCounterparty\Errors\InputErrors()), ($container->privates['App\\Counterparty\\InfrastructureCounterparty\\RepositoryCounterparty\\CounterpartyRepository'] ?? $container->load('getCounterpartyRepositoryService')));
    }
}
