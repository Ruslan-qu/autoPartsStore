<?php

namespace ContainerM9s1qO5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCounterpartyControllerdeleteCounterpartyService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.W9r73QE.App\Counterparty\InfrastructureCounterparty\ApiCounterparty\ControllerCounterparty\CounterpartyController::deleteCounterparty()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.W9r73QE.App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\ControllerCounterparty\\CounterpartyController::deleteCounterparty()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'findIdCounterpartyQueryHandler' => ['privates', 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\EditCounterpartyQuery\\FindIdCounterpartyQueryHandler', 'getFindIdCounterpartyQueryHandlerService', true],
            'adapterCounterpartyInterface' => ['privates', 'App\\AutoPartsWarehouse\\InfrastructureAutoPartsWarehouse\\ApiAutoPartsWarehouse\\Adapters\\AdapterCounterparty\\AdapterCounterparty', 'getAdapterCounterpartyService', true],
            'deleteCounterpartyCommandHandler' => ['privates', 'App\\Counterparty\\ApplicationCounterparty\\CommandsCounterparty\\DeleteCounterpartyCommand\\DeleteCounterpartyCommandHandler', 'getDeleteCounterpartyCommandHandlerService', true],
        ], [
            'findIdCounterpartyQueryHandler' => 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\EditCounterpartyQuery\\FindIdCounterpartyQueryHandler',
            'adapterCounterpartyInterface' => '?',
            'deleteCounterpartyCommandHandler' => 'App\\Counterparty\\ApplicationCounterparty\\CommandsCounterparty\\DeleteCounterpartyCommand\\DeleteCounterpartyCommandHandler',
        ]))->withContext('App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\ControllerCounterparty\\CounterpartyController::deleteCounterparty()', $container);
    }
}
