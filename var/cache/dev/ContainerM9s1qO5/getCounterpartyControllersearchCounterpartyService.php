<?php

namespace ContainerM9s1qO5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCounterpartyControllersearchCounterpartyService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.2LPzTip.App\Counterparty\InfrastructureCounterparty\ApiCounterparty\ControllerCounterparty\CounterpartyController::searchCounterparty()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.2LPzTip.App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\ControllerCounterparty\\CounterpartyController::searchCounterparty()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'findByCounterpartyQueryHandler' => ['privates', 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\SearchCounterpartyQuery\\FindByCounterpartyQueryHandler', 'getFindByCounterpartyQueryHandlerService', true],
            'searchCounterpartyQueryHandler' => ['privates', 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\SearchCounterpartyQuery\\SearchCounterpartyQueryHandler', 'getSearchCounterpartyQueryHandlerService', true],
        ], [
            'findByCounterpartyQueryHandler' => 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\SearchCounterpartyQuery\\FindByCounterpartyQueryHandler',
            'searchCounterpartyQueryHandler' => 'App\\Counterparty\\ApplicationCounterparty\\QueryCounterparty\\SearchCounterpartyQuery\\SearchCounterpartyQueryHandler',
        ]))->withContext('App\\Counterparty\\InfrastructureCounterparty\\ApiCounterparty\\ControllerCounterparty\\CounterpartyController::searchCounterparty()', $container);
    }
}
